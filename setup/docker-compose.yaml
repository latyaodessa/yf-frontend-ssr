version: "3"
services:
  nginx:
    container_name: nginx
    restart: always
    build: ./nginx
    image: 127.0.0.1:5000/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - parser
      - backend
      - mailsender
      - database
      - storage
      - elasticsearch
    networks:
      - nginx-proxy
  frontend:
    container_name: frontend
    restart: always
    build: ./../frontend
    image: 127.0.0.1:5000/frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - frontend-data:/app/static
    networks:
      - nginx-proxy
  backend:
    container_name: backend
    restart: always
    build: ./../yf-services
    image: 127.0.0.1:5000/yf-services
    entrypoint: "/opt/payara41/bin/startInForeground.sh --passwordfile=/opt/pwdfile -d --postbootcommandfile glassfish/domains/domain1"
    environment:
      - TASK_NAME={{.Task.Name}}
    ports:
      - "8080:8080"
      - "8181:8181"
      - "4848:4848"
      - "9009:9009"
      - "29009:29009"
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - database
    networks:
      - nginx-proxy
  parser:
    container_name: parser
    restart: always
    build: ./../parser
    image: 127.0.0.1:5000/parser
    ports:
      - "9091:8080"
    networks:
      - nginx-proxy
  mailsender:
    container_name: mailsender
    restart: always
    build: ./../mail-sender
    image: 127.0.0.1:5000/mail-sender
    ports:
      - "9092:8080"
    networks:
      - nginx-proxy
  storage:
    container_name: storage
    restart: always
    build: ./../storage-service
    image: 127.0.0.1:5000/storage-service
    deploy:
      mode: replicated
      replicas: 2
    ports:
      - "9093:8080"
    networks:
      - nginx-proxy
    volumes:
      - /mnt/storage:/app/uploads
  database:
    container_name: database
    restart: always
    build: ./database
    image: 127.0.0.1:5000/database
    ports:
      - "53249:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nginx-proxy
  elasticsearch:
    build: ./elasticsearch
    image: 127.0.0.1:5000/elasticsearch
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
    ports:
      - "3200:9200"
      - "3300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - nginx-proxy
networks:
  nginx-proxy:
volumes:
  postgres-data:
  elasticsearch-data:
  frontend-data:
